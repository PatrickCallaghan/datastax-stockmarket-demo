  package com.oak.tradesystem.commands;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Properties;

import com.oak.tradesystem.objects.yahoo.YahooTradeQuote;
import com.oak.tradesystem.test.TradeProcessor;

public class GetHistoricalDataCommand implements Command{
	
	private String name;
	private String report;
	private int lengthOfTime;
	private List<YahooTradeQuote> historicalData;
	
	public List<YahooTradeQuote> getHistoricalData() {
		return historicalData;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setLengthOfTime(int lengthOfTime){
		this.lengthOfTime = lengthOfTime;
	}

	public void execute() throws Exception{
		
		historicalData = new ArrayList<YahooTradeQuote>();
		
		TradeProcessor processor = new TradeProcessor(null);
		Object[] quotes = processor.getStockQuotes(name, "", "");
	
		if (quotes==null){
			throw new Exception("No data found for " + name);
		}
		
		if (quotes.length < this.lengthOfTime)
			this.lengthOfTime = quotes.length;
		
		for (int i=0; i < this.lengthOfTime; i++){
			
			historicalData.add((YahooTradeQuote)quotes[i]);
		}
	}
	
	public String getReport(){
		return report;
	}
	
	public static void main (String args[]){
		Properties properties = new Properties();
	    try {
	        properties.load(new FileInputStream("tradesystem.properties"));
	    } catch (IOException e) {
	    }
	    
		long start = System.currentTimeMillis();
		
		LoadTickersCommand loadCommand = new LoadTickersCommand(properties);
		loadCommand.execute();
		List<String> tickers = loadCommand.getTickers();
		Map<String, Long> tickerIdMap = loadCommand.getTickerIdMap();
		
		
		
		long end = System.currentTimeMillis();
		
		System.out.println("Completed in " + (end-start) + "ms.");
		
	}
}
